{"version":3,"sources":["custom-components/InsightsOverview/SentimentTimeCharts/index.js","custom-components/InsightsOverview/SentimentDistribution/index.js","custom-components/InsightsOverview/SentimentOverview/index.js","custom-pages/InsightsOverview/index.js"],"names":["SentimentTimeCharts","overallSentimentByDate","useContext","InsightsOverviewContext","chartDashboardCommerce1AOptions","stroke","curve","width","chart","toolbar","show","colors","fill","opacity","labels","timeline","xaxis","categories","dataLabels","enabled","grid","strokeDashArray","borderColor","legend","annotations","yaxis","y","label","style","color","background","text","chartDashboardCommerce1AData","name","type","data","map","item","index","Math","ceil","random","Card","className","CardHeader","CardBody","options","series","height","SentimentDistribution","sentimentDistribution","strongNegative","negative","neutral","positive","strongPositive","SentimentOverview","useState","activeTab","totalTweets","currentSentimentOnVaccine","currentVaccinationRate","TabContent","TabPane","tabId","UncontrolledAlert","href","onClick","e","preventDefault","Row","Col","xl","Button","size","icon","id","arcPadding","cornerRadius","textColor","percent","animDelay","InsightsOverview","setTotalTweets","setCurrentSentimentOnVaccine","setCurrentVaccinationRate","setSentimentDistribution","setOverallSentimentByDate","useEffect","fetch","then","res","ok","json","console","log","titleHeading","titleDescription"],"mappings":"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","file":"static/js/6.f821d106.chunk.js","sourcesContent":["\n\n\nimport React, {useContext} from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Row, Col, Card, Button, CardHeader, CardBody } from 'reactstrap';\nimport Chart from 'react-apexcharts';\nimport { InsightsOverviewContext } from 'contexts/InsightsOverviewContext';\n\nexport default function SentimentTimeCharts() {\n    const {overallSentimentByDate} = useContext(InsightsOverviewContext)\n    const chartDashboardCommerce1AOptions = {\n        stroke: {\n            curve: 'smooth',\n            width: [0, 4]\n        },\n        chart: {\n            toolbar: {\n                show: false\n            }\n        },\n        colors: ['rgba(60, 68, 177, 0.3)', '#3c44b1'],\n        fill: {\n            opacity: 1\n        },\n        labels: overallSentimentByDate.timeline,\n        xaxis: {\n            // type: 'datetime'\n            categories: overallSentimentByDate.timeline\n        },\n        dataLabels: {\n            enabled: false\n        },\n        grid: {\n            strokeDashArray: '5',\n            borderColor: 'rgba(125, 138, 156, 0.3)'\n        },\n        legend: {\n            show: false\n        },\n        annotations: {\n            yaxis: [\n                {\n                    y: 50,\n                    borderColor: '#FF4560',\n                    label: {\n                        borderColor: '#FF4560',\n                        style: {\n                            color: '#fff',\n                            background: '#FF4560'\n                        },\n                        text: 'Sentiment Threshold'\n                    }\n                }\n            ]\n        }\n    };\n    const chartDashboardCommerce1AData = [\n        {\n            name: 'Sentiment',\n            type: 'column',\n            data: overallSentimentByDate[\"sentimentPerDate\"]\n        },\n        {\n            name: 'Vaccination Ratio',\n            type: 'line',\n            data: overallSentimentByDate[\"sentimentPerDate\"].map((item,index)=>1.3+index*Math.ceil(Math.random()))\n        }\n    ];\n    return (\n        <>\n            <Card className=\"card-box p-1 mb-5\">\n                <CardHeader>\n                    <div className=\"p-0\">\n                        <h6 className=\"font-weight-bold font-size-lg mb-1 text-black\">\n                            Perception Over-Time\n                        </h6>\n                        <p className=\"text-black-50 font-size-md mb-0\">\n                            View the Perception calculated over past 12 months\n                        </p>\n                    </div>\n                    \n                </CardHeader>\n                <CardBody>\n                    <div className=\"py-2\">\n                        <Chart\n                            options={chartDashboardCommerce1AOptions}\n                            series={chartDashboardCommerce1AData}\n                            type=\"line\"\n                            height={365}\n                        />\n                    </div>\n                    {/* <div className=\"divider bg-dark opacity-1\" /> */}\n                </CardBody>\n            </Card>\n\n        </>\n    )\n}\n","import React, { useContext } from 'react';\n\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { Bell, Settings, XCircle, PlayCircle, AlertCircle,CheckCircle } from 'react-feather';\nimport Chart from 'react-apexcharts';\nimport { InsightsOverviewContext } from 'contexts/InsightsOverviewContext'\n\n\nexport default function SentimentDistribution() {\n    const {sentimentDistribution} = useContext(InsightsOverviewContext);\n    const strongNegative = sentimentDistribution.strongNegative\n    const negative = sentimentDistribution['negative']\n    const neutral = sentimentDistribution['neutral']\n    const positive = sentimentDistribution['positive']\n    const strongPositive = sentimentDistribution['strongPositive']\n\n    const options = {\n        labels: ['Strong Negative', 'Negative', 'Neutral','Positive', 'Strong Positive']\n    };\n    const series = [strongNegative,negative,neutral,positive,strongPositive];\n    return (\n        <>\n            <Card className=\"card-box\">\n                <CardHeader >\n                    <div className=\"p-0\">\n                        <h6 className=\"font-weight-bold font-size-lg mb-1 text-black\">\n                            Overall Sentiment Distribution\n                        </h6>\n                        <p className=\"text-black-50 font-size-md mb-0\">\n                            View Overall Sentiment Distribution across different level\n                        </p>\n                    </div>\n\n                </CardHeader>\n                <CardBody>\n                    <div className=\"d-flex flex-row flex-wrap justify-content-center\">\n                        <div className=\"py-4 px-5 d-flex align-items-center\">\n                            <XCircle className=\"d-50 text-danger mr-3\" />\n                            <div className=\"text-center\">\n                                <span className=\"d-block text-danger\">Strong Negative</span>\n                                <span className=\"font-weight-bold font-size-xl text-danger\">\n                                    {strongNegative}\n                                </span>\n                            </div>\n                        </div>\n                        <div className=\"px-5 d-flex align-items-center\">\n                            <AlertCircle className=\"d-50 text-warning mr-3\" />\n                            <div className=\"text-center\">\n                                <span className=\"d-block text-warning\">Negative</span>\n                                <span className=\"font-weight-bold font-size-xl text-warning\">\n                                {negative}\n                                </span>\n                            </div>\n                        </div>\n                        <div className=\"py-4 px-5 d-flex align-items-center\">\n                            <CheckCircle className=\"d-50 text-success mr-3\" />\n                            <div className=\"text-center\">\n                                <span className=\"d-block text-sucess\">Strong Positive</span>\n                                <span className=\"font-weight-bold font-size-xl text-sucess\">\n                                {strongPositive}\n                                </span>\n                            </div>\n                        </div>\n                        <div className=\"px-5 d-flex align-items-center\">\n                            <PlayCircle className=\"d-50 text-info mr-3\" />\n                            <div className=\"text-center\">\n                                <span className=\"d-block text-info\">Positive</span>\n                                <span className=\"font-weight-bold font-size-xl text-info\">\n                                    {positive}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"divider\" />\n                    <div className=\"d-flex w-100 justify-content-center\">\n                        <Chart options={options} series={series} type=\"donut\" width=\"380\" />\n                    </div>\n                </CardBody>\n            </Card>\n\n        </>\n    );\n}\n","import React, { useState, useContext } from 'react'\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Row, Col, Card, TabContent, TabPane, Nav, NavItem, Button } from 'reactstrap';\nimport { NavLink as NavLinkStrap } from 'reactstrap';\nimport GaugeChart from 'react-gauge-chart';\nimport SentimentTimeCharts from \"../SentimentTimeCharts\";\nimport SentimentDistribution from \"../SentimentDistribution\";\nimport { UncontrolledAlert } from 'reactstrap';\n\n//import context\nimport { InsightsOverviewContext } from 'contexts/InsightsOverviewContext'\n\nexport default function SentimentOverview() {\n    const [activeTab, setActiveTab] = useState('1');\n    const { totalTweets, currentSentimentOnVaccine,currentVaccinationRate} = useContext(InsightsOverviewContext);\n\n    const toggle = (tab) => {\n        if (activeTab !== tab) setActiveTab(InsightsOverviewContext);\n    };\n\n    return (\n        <>\n            {/* <Card className=\"shadow-xxl mb-5 bg-light\">\n                <div className=\"nav-tabs-dark tabs-animated tabs-animated-line\">\n                    <Nav tabs className=\"justify-content-around\">\n                        <NavItem>\n                            <NavLinkStrap\n                                className={clsx({ active: activeTab === '1' })}\n                                onClick={() => {\n                                    toggle('1');\n                                }}>\n                                <span className=\"font-weight-bold text-uppercase font-size-md text-dark\">\n                                    Sentiment Overview\n                    </span>\n                            </NavLinkStrap>\n                        </NavItem>\n                        <NavItem>\n                            <NavLinkStrap\n                                className={clsx({ active: activeTab === '2' })}\n                                onClick={() => {\n                                    toggle('2');\n                                }}>\n                                <span className=\"font-weight-bold text-uppercase font-size-md text-dark\">\n                                    Perception Breakdown\n                    </span>\n                            </NavLinkStrap>\n                        </NavItem>\n                    </Nav>\n                </div>\n            </Card> */}\n            <TabContent activeTab={activeTab}>\n                <TabPane tabId=\"1\">\n                    <UncontrolledAlert color=\"primary\">\n                        Total Processed Tweets:  {' '}\n                        <a href=\"#/\" onClick={(e) => e.preventDefault()} className=\"alert-link\">\n                            {totalTweets}\n                        </a>\n\n                    </UncontrolledAlert>\n                    <Row className=\"pt-3\">\n                        <Col xl=\"3\">\n                            <Row>\n                                <Card className=\"card-box mb-5 w-100 p-4 d-flex align-items-center card-box-hover-rise\">\n                                    <div className=\"d-flex flex-column flex-grow-1 justify-content-center w-100\">\n                                        <div className=\"card-header-alt d-flex justify-content-between align-items-center\">\n                                            <h6 className=\"font-weight-bold font-size-lg mb-0 text-black\">\n                                                Current Sentiment on Vaccine\n                                    </h6>\n                                            {/* <div className=\"text-success font-weight-bold\">$56,304.00</div> */}\n                                        </div>\n                                        <div className=\"card-tr-actions\">\n                                            <Button\n                                                size=\"sm\"\n                                                color=\"neutral-primary\"\n                                                className=\"hover-scale-sm d-40 p-0 btn-icon\">\n                                                <FontAwesomeIcon icon={['fas', 'arrow-right']} />\n                                            </Button>\n                                        </div>\n                                        <div className=\"mx-auto py-3\">\n                                            <GaugeChart\n                                                id=\"chartsGaugesOverallSentiment\"\n                                                arcPadding={0.1}\n                                                cornerRadius={3}\n                                                textColor=\"rgba(0,0,0,.5\"\n                                                colors={[\n                                                    'rgba(248,50,69,0.99)',\n                                                    'rgba(244,119,46,0.99)',\n                                                    'rgba(27,201,67,0.99)'\n                                                ]}\n                                                percent={currentSentimentOnVaccine}\n                                                animDelay={0}\n                                            />\n                                        </div>\n                                    </div>\n                                </Card>\n                            </Row>\n                            <Row>\n                                <Card className=\"card-box mb-5 w-100 p-4 d-flex align-items-center card-box-hover-rise\">\n                                    <div className=\"d-flex flex-column flex-grow-1 justify-content-center w-100\">\n                                        <div className=\"card-header-alt d-flex justify-content-between align-items-center\">\n                                            <h6 className=\"font-weight-bold font-size-lg mb-0 text-black\">\n                                                Current Vaccination Rate\n                                </h6>\n                                            {/* <div className=\"text-success font-weight-bold\">$56,304.00</div> */}\n                                        </div>\n                                        <div className=\"card-tr-actions\">\n                                            <Button\n                                                size=\"sm\"\n                                                color=\"neutral-primary\"\n                                                className=\"hover-scale-sm d-40 p-0 btn-icon\">\n                                                <FontAwesomeIcon icon={['fas', 'arrow-right']} />\n                                            </Button>\n                                        </div>\n                                        <div className=\"mx-auto py-3\">\n                                            <GaugeChart\n                                                id=\"chartsGaugesMTTR\"\n                                                arcPadding={0.1}\n                                                cornerRadius={3}\n                                                textColor=\"rgba(0,0,0,.5\"\n                                                colors={[\n                                                    'rgba(248,50,69,0.99)',\n                                                    'rgba(244,119,46,0.99)',\n                                                    'rgba(27,201,67,0.99)'\n                                                ]}\n                                                percent={currentVaccinationRate}\n                                                animDelay={0}\n                                            />\n                                        </div>\n                                    </div>\n                                </Card>\n                            </Row>\n                        </Col>\n                        <Col xl=\"9\">\n                            <SentimentTimeCharts />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col xl=\"6\">\n                            <SentimentDistribution />\n                        </Col>\n                        <Col xl=\"6\">\n                           \n                        </Col>\n                    </Row>\n                </TabPane>\n\n                <TabPane tabId=\"2\">\n\n                </TabPane>\n            </TabContent>\n        </>\n    )\n}\n","import React, {useEffect,useContext} from 'react'\nimport clsx from 'clsx';\nimport { PageTitle } from '../../layout-components';\nimport { InsightsOverviewContext } from 'contexts/InsightsOverviewContext';\nimport SentimentOverview from \"../../custom-components/InsightsOverview/SentimentOverview\";\n\nexport default function InsightsOverview() {\n    const {\n        setTotalTweets,\n        setCurrentSentimentOnVaccine,\n        setCurrentVaccinationRate,\n        setSentimentDistribution,\n        setOverallSentimentByDate\n    } = useContext(InsightsOverviewContext);\n    useEffect(()=>{\n        fetch('/api/insightsOverview').then(res=>{\n            if(res.ok){\n                return res.json()\n            }\n        }).then(data => {\n            console.log(data);\n            setTotalTweets(data.totalTweets);\n            setCurrentSentimentOnVaccine(data.currentSentimentOnVaccine);\n            setCurrentVaccinationRate(data.currentVaccinationRate);\n            setSentimentDistribution(data.sentimentDistribution);\n            setOverallSentimentByDate(data.overallSentimentByDate);\n        })\n    },[]);\n\n    return (\n        <>\n            <PageTitle\n                titleHeading=\"Insights Overview\"\n                titleDescription=\"High Level Statistics of overall Australia public perception on COVID-19 Vaccine\"\n            />\n            <SentimentOverview  />\n        </>\n    )\n}\n"],"sourceRoot":""}